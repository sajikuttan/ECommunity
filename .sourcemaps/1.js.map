{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QARnC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;aAC5C;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AACwD;AAC9B;AACX;AACD;AAQxD;IAEE,2BACS,OAAsB,EACtB,WAA8B,EAC9B,SAA0B,EAC1B,YAA0B,EACjC,WAAwB;QAJjB,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAGjC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE;gBACL,EAAE;gBACF,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC;aAClE;SACF,CAAC,CAAC;IACL,CAAC;IAEK,yCAAa,GAAnB;;;;;;;6BACM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAA7B,wBAA6B;wBAC/B,OAAO,CAAC,GAAG,CACT,2CAAyC,IAAI,CAAC,iBAAiB,CAAC,KAAO,CACxE,CAAC;;;wBAEI,OAAO,GAAY,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBACnD,OAAO,CAAC,OAAO,EAAE,CAAC;wBAEZ,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;;;;wBAGvB,qBAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;;wBAA9D,SAAS,GAAS,SAA4C;wBACpE,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBAClB,UAAe,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACzC,OAAO,EAAE,4CAA4C;4BACrD,OAAO,EAAE;gCACP,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;gCAClC;oCACE,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE,cAAI;wCACX,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;oCACrB,CAAC;iCACF;6BACF;yBACF,CAAC,CAAC;wBACH,OAAK,CAAC,OAAO,EAAE,CAAC;;;;wBAEhB,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBAClB,UAAe,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACzC,OAAO,EAAE,OAAK,CAAC,OAAO;4BACtB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;yBAC1C,CAAC,CAAC;wBACH,OAAK,CAAC,OAAO,EAAE,CAAC;;;;;;KAGrB;IArDU,iBAAiB;QAJ7B,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;WACG;SACnC,CAAC;qFAI+B;YACT,uEAAiB;YACnB,2EAAe;YACZ,oEAAY;YACpB,WAAW;OAPf,iBAAiB,CAsD7B;IAAD,CAAC;AAAA;SAtDY,iBAAiB,gB","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { Component } from '@angular/core';\nimport {\n  Alert,\n  AlertController,\n  IonicPage,\n  Loading,\n  LoadingController,\n  NavController\n} from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { EmailValidator } from '../../validators/email';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html'\n})\nexport class ResetPasswordPage {\n  public resetPasswordForm: FormGroup;\n  constructor(\n    public navCtrl: NavController,\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    public authProvider: AuthProvider,\n    formBuilder: FormBuilder\n  ) {\n    this.resetPasswordForm = formBuilder.group({\n      email: [\n        '',\n        Validators.compose([Validators.required, EmailValidator.isValid])\n      ]\n    });\n  }\n\n  async resetPassword(): Promise<void> {\n    if (!this.resetPasswordForm.valid) {\n      console.log(\n        `Form is not valid yet, current value: ${this.resetPasswordForm.value}`\n      );\n    } else {\n      const loading: Loading = this.loadingCtrl.create();\n      loading.present();\n\n      const email = this.resetPasswordForm.value.email;\n\n      try {\n        const loginUser: void = await this.authProvider.resetPassword(email);\n        await loading.dismiss();\n        const alert: Alert = this.alertCtrl.create({\n          message: 'Check your inbox for a password reset link',\n          buttons: [\n            { text: 'Cancel', role: 'cancel' },\n            {\n              text: 'Ok',\n              handler: data => {\n                this.navCtrl.pop();\n              }\n            }\n          ]\n        });\n        alert.present();\n      } catch (error) {\n        await loading.dismiss();\n        const alert: Alert = this.alertCtrl.create({\n          message: error.message,\n          buttons: [{ text: 'Ok', role: 'cancel' }]\n        });\n        alert.present();\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}